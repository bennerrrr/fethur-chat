name: Frontend CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'client/web/**'
      - '.github/workflows/frontend.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'client/web/**'
      - '.github/workflows/frontend.yml'

jobs:
  frontend-test:
    name: Frontend Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client/web
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: 'client/web/pnpm-lock.yaml'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Type check
        run: pnpm check

      - name: Lint
        run: pnpm lint

      - name: Format check
        run: pnpm format --check

      - name: Run tests
        run: pnpm test --run --coverage

      - name: Build application
        run: pnpm build

      - name: Upload coverage reports
        uses: codecov/codecov-action@v5
        if: always()
        with:
          files: ./client/web/coverage/lcov.info
          flags: frontend-tests
          name: codecov-frontend
          fail_ci_if_error: false

  frontend-quality:
    name: Frontend Quality Gates
    runs-on: ubuntu-latest
    needs: frontend-test
    defaults:
      run:
        working-directory: client/web
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: 'client/web/pnpm-lock.yaml'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build for analysis
        run: pnpm build

      - name: Bundle size analysis
        run: |
          echo "=== Bundle Size Analysis ==="
          du -sh build/
          echo "Build directory size:"
          find build/ -type f -name "*.js" -exec du -sh {} \;
          echo "Total JS files:"
          find build/ -type f -name "*.js" | wc -l

      - name: Check for large files
        run: |
          echo "=== Large File Check ==="
          find build/ -type f -size +1M -exec ls -lh {} \;
          if [ $(find build/ -type f -size +1M | wc -l) -gt 0 ]; then
            echo "Warning: Large files detected in build output"
            exit 1
          fi

  frontend-accessibility:
    name: Frontend Accessibility
    runs-on: ubuntu-latest
    needs: frontend-test
    defaults:
      run:
        working-directory: client/web
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: 'client/web/pnpm-lock.yaml'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm build

      - name: Start preview server
        run: |
          pnpm preview &
          sleep 10

      - name: Run accessibility tests
        run: |
          echo "Accessibility checks would run here"
          echo "Consider adding axe-core or similar tools"
          echo "For now, this is a placeholder for accessibility testing" 